<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;application&#10;        android:name=&quot;.AlcoholicTimerApplication&quot;&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.AlcoholicTimer&quot;&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:label=&quot;@string/app_name&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;        &lt;activity&#10;            android:name=&quot;.StartActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.StatusActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.RecordsActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.RecordSummaryActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.ChallengeActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MessageActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#10;        &lt;activity&#10;            android:name=&quot;.SettingsActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;설정&quot;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot; /&gt;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#13;&#10;&#13;&#10;    &lt;application&#13;&#10;        android:name=&quot;.AlcoholicTimerApplication&quot;&#13;&#10;        android:allowBackup=&quot;true&quot;&#13;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#13;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#13;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#13;&#10;        android:label=&quot;@string/app_name&quot;&#13;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#13;&#10;        android:supportsRtl=&quot;true&quot;&#13;&#10;        android:theme=&quot;@style/Theme.AlcoholicTimer&quot;&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.MainActivity&quot;&#13;&#10;            android:exported=&quot;true&quot;&#13;&#10;            android:label=&quot;@string/app_name&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;&gt;&#13;&#10;            &lt;intent-filter&gt;&#13;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#13;&#10;&#13;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#13;&#10;            &lt;/intent-filter&gt;&#13;&#10;        &lt;/activity&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.StartActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.StatusActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.RecordsActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.RecordSummaryActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.ChallengeActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.MessageActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.SettingsActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:label=&quot;설정&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot; /&gt;&#13;&#10;        &lt;activity&#13;&#10;            android:name=&quot;.NotificationsActivity&quot;&#13;&#10;            android:exported=&quot;false&quot;&#13;&#10;            android:theme=&quot;@style/Theme.AlcoholicTimer&quot;/&gt;&#13;&#10;    &lt;/application&gt;&#13;&#10;&#13;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/BaseActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/BaseActivity.kt" />
              <option name="originalContent" value="package com.example.alcoholictimer&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.widget.ImageButton&#10;import android.widget.TextView&#10;import android.widget.Toast&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.WindowCompat&#10;import androidx.drawerlayout.widget.DrawerLayout&#10;import com.example.alcoholictimer.utils.Constants&#10;import com.google.android.material.navigation.NavigationView&#10;import java.util.Date&#10;&#10;/**&#10; * 모든 액티비티의 베이스 클래스&#10; * 공통된 햄버거 메뉴와 네비게이션 기능을 제공합니다.&#10; */&#10;abstract class BaseActivity : AppCompatActivity() {&#10;&#10;    protected lateinit var drawerLayout: DrawerLayout&#10;    protected lateinit var navigationView: NavigationView&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;&#10;        // 시스템 UI와의 겹침 처리를 위한 설정&#10;        WindowCompat.setDecorFitsSystemWindows(window, false)&#10;&#10;        setContentView(R.layout.layout_base)&#10;&#10;        // 공통 UI 요소 초기화&#10;        drawerLayout = findViewById(R.id.drawerLayout)&#10;        navigationView = findViewById(R.id.navigationView)&#10;        val btnMenu = findViewById&lt;ImageButton&gt;(R.id.btnMenu)&#10;&#10;        // 메뉴 버튼 클릭 시 드로어 열기&#10;        btnMenu.setOnClickListener {&#10;            // 드로어를 열기 전에 최신 상태로 업데이트&#10;            updateNavigationDrawer()&#10;            drawerLayout.open()&#10;        }&#10;&#10;        // 내비게이션 메뉴 아이템 클릭 이벤트&#10;        navigationView.setNavigationItemSelectedListener { menuItem -&gt;&#10;            when (menuItem.itemId) {&#10;                R.id.nav_start -&gt; {&#10;                    val sharedPref = getSharedPreferences(&quot;user_settings&quot;, MODE_PRIVATE)&#10;                    val hasStarted = sharedPref.contains(&quot;start_time&quot;)&#10;&#10;                    if (hasStarted) {&#10;                        // 금주 중일 때는 상태 화면으로 이동&#10;                        if (this !is StatusActivity) {&#10;                            val intent = Intent(this, StatusActivity::class.java)&#10;                            // 기존 StatusActivity를 재사용하기 위한 플래그 설정&#10;                            intent.flags = Intent.FLAG_ACTIVITY_REORDER_TO_FRONT&#10;                            startActivity(intent)&#10;                            if (this !is MainActivity) {&#10;                                finish()&#10;                            }&#10;                        }&#10;                    } else {&#10;                        // 금주 중이 아닐 때는 시작 화면으로 이동&#10;                        if (this !is StartActivity) {&#10;                            val intent = Intent(this, StartActivity::class.java)&#10;                            startActivity(intent)&#10;                            if (this !is MainActivity) {&#10;                                finish()&#10;                            }&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_records -&gt; {&#10;                    // 활동 보기 화면으로 이동&#10;                    Toast.makeText(this, &quot;활동 보기로 이동합니다&quot;, Toast.LENGTH_SHORT).show()&#10;                    if (this !is RecordsActivity) {&#10;                        val intent = Intent(this, RecordsActivity::class.java)&#10;                        startActivity(intent)&#10;                        if (this !is MainActivity) {&#10;                            finish()&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_challenge -&gt; {&#10;                    // 챌린지 화면으로 이동&#10;                    if (this !is ChallengeActivity) {&#10;                        val intent = Intent(this, ChallengeActivity::class.java)&#10;                        startActivity(intent)&#10;                        if (this !is MainActivity) {&#10;                            finish()&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_messages -&gt; {&#10;                    // 응원 메시지 화면으로 이동&#10;                    if (this !is MessageActivity) {&#10;                        val intent = Intent(this, MessageActivity::class.java)&#10;                        startActivity(intent)&#10;                        if (this !is MainActivity) {&#10;                            finish()&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_notifications -&gt; {&#10;                    // 알림함 화면으로 이동&#10;                    if (this !is NotificationsActivity) {&#10;                        val intent = Intent(this, NotificationsActivity::class.java)&#10;                        startActivity(intent)&#10;                    }&#10;                    drawerLayout.closeDrawers()&#10;                    true&#10;                }&#10;                R.id.nav_settings -&gt; {&#10;                    // 설정 화면으로 이동&#10;                    val intent = Intent(this, SettingsActivity::class.java)&#10;                    startActivity(intent)&#10;                    // 설정 화면에서는 현재 화면을 유지&#10;                }&#10;            }&#10;            // 메뉴 선택 후 드로어 닫기&#10;            drawerLayout.close()&#10;            true&#10;        }&#10;&#10;        // 특정 화면에 필요한 컨텐츠 뷰 설정&#10;        setupContentView()&#10;    }&#10;&#10;    /**&#10;     * 금주 상태에 따라 내비게이션 메뉴 상태와 헤더 정보를 업데이트합니다.&#10;     */&#10;    private fun updateNavigationDrawer() {&#10;        // 네비게이션 메뉴 상태 업데이트&#10;        updateNavigationMenuState()&#10;&#10;        // 네비게이션 헤더 정보 업데이트&#10;        updateNavigationHeader()&#10;    }&#10;&#10;    /**&#10;     * 금주 상태에 따라 내비게이션 메뉴 상태를 업데이트합니다.&#10;     * 금주 메뉴는 항상 활성화하고, 금주 중인 경우 텍스트를 '금주 상태'로 변경합니다.&#10;     */&#10;    private fun updateNavigationMenuState() {&#10;        val sharedPref = getSharedPreferences(&quot;user_settings&quot;, MODE_PRIVATE)&#10;        val hasStarted = sharedPref.contains(&quot;start_time&quot;)&#10;&#10;        // 금주 메뉴는 항상 활성화하고, 금주 중인 경우 텍스트 변경&#10;        val startMenuItem = navigationView.menu.findItem(R.id.nav_start)&#10;        startMenuItem.isEnabled = true&#10;        if (hasStarted) {&#10;            startMenuItem.title = &quot;금주 상태&quot;&#10;        } else {&#10;            startMenuItem.title = &quot;금주&quot;&#10;        }&#10;&#10;        // 활동 보기 메뉴는 항상 활성화&#10;        val recordsMenuItem = navigationView.menu.findItem(R.id.nav_records)&#10;        recordsMenuItem.isEnabled = true&#10;    }&#10;&#10;    /**&#10;     * 네비게이션 헤더의 사용자 정보를 업데이트합니다.&#10;     */&#10;    private fun updateNavigationHeader() {&#10;        val headerView = navigationView.getHeaderView(0)&#10;        if (headerView != null) {&#10;            val tvUserNickname = headerView.findViewById&lt;TextView&gt;(R.id.tvUserNickname)&#10;            val tvUserLevelDays = headerView.findViewById&lt;TextView&gt;(R.id.tvUserLevelDays)&#10;&#10;            // 사용자 이름은 기본값으로 &quot;알중이&quot; 사용&#10;            tvUserNickname.text = &quot;알중이&quot;&#10;&#10;            // 금주 상태에 따른 레벨 및 일수 정보 업데이트&#10;            val sharedPref = getSharedPreferences(&quot;user_settings&quot;, MODE_PRIVATE)&#10;            if (sharedPref.contains(&quot;start_time&quot;)) {&#10;                val startTime = sharedPref.getLong(&quot;start_time&quot;, Date().time)&#10;                val timePassed = ((System.currentTimeMillis() - startTime) / Constants.TIME_UNIT_MILLIS).toInt()&#10;&#10;                // 레벨 계산 (시간 단위에 따라 적절한 마일스톤 사용)&#10;                val adjustedMilestones = when {&#10;                    Constants.isSecondTestMode -&gt; listOf(0, 7, 14, 30, 60, 120, 240, 365)&#10;                    Constants.isMinuteTestMode -&gt; listOf(0, 1, 2, 5, 10, 15, 20, 30)&#10;                    else -&gt; listOf(0, 7, 14, 30, 60, 120, 240, 365)&#10;                }&#10;&#10;                var currentLevel = 1&#10;                for (i in adjustedMilestones.indices) {&#10;                    if (timePassed &gt;= adjustedMilestones[i]) {&#10;                        currentLevel = i + 1&#10;                    } else {&#10;                        break&#10;                    }&#10;                }&#10;&#10;                tvUserLevelDays.text = &quot;Level $currentLevel · ${timePassed}${Constants.TIME_UNIT_TEXT} 금주 중&quot;&#10;            } else {&#10;                tvUserLevelDays.text = &quot;금주를 시작해보세요!&quot;&#10;            }&#10;        }&#10;    }&#10;&#10;    /**&#10;     * 각 액티비티에서 구현할 추상 메소드&#10;     * 각자의 레이아웃을 contentFrame에 추가하는 작업을 수행&#10;     */&#10;    protected abstract fun setupContentView()&#10;&#10;    /**&#10;     * 액티비티가 새 인텐트로 재사용될 때 수행할 작업을 정의합니다.&#10;     * 자식 클래스에서 오버라이드할 수 있습니다.&#10;     */&#10;    open fun handleNewIntent(intent: Intent?) {&#10;        // 기본 구현은 아무 작업도 수행하지 않습니다&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.alcoholictimer&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.widget.ImageButton&#10;import android.widget.TextView&#10;import android.widget.Toast&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.WindowCompat&#10;import androidx.drawerlayout.widget.DrawerLayout&#10;import com.example.alcoholictimer.utils.Constants&#10;import com.google.android.material.navigation.NavigationView&#10;import java.util.Date&#10;&#10;/**&#10; * 모든 액티비티의 베이스 클래스&#10; * 공통된 햄버거 메뉴와 네비게이션 기능을 제공합니다.&#10; */&#10;abstract class BaseActivity : AppCompatActivity() {&#10;&#10;    protected lateinit var drawerLayout: DrawerLayout&#10;    protected lateinit var navigationView: NavigationView&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;&#10;        // 시스템 UI와의 겹침 처리를 위한 설정&#10;        WindowCompat.setDecorFitsSystemWindows(window, false)&#10;&#10;        setContentView(R.layout.layout_base)&#10;&#10;        // 공통 UI 요소 초기화&#10;        drawerLayout = findViewById(R.id.drawerLayout)&#10;        navigationView = findViewById(R.id.navigationView)&#10;        val btnMenu = findViewById&lt;ImageButton&gt;(R.id.btnMenu)&#10;&#10;        // 메뉴 버튼 클릭 시 드로어 열기&#10;        btnMenu.setOnClickListener {&#10;            // 드로어를 열기 전에 최신 상태로 업데이트&#10;            updateNavigationDrawer()&#10;            drawerLayout.open()&#10;        }&#10;&#10;        // 내비게이션 메뉴 아이템 클릭 이벤트&#10;        navigationView.setNavigationItemSelectedListener { menuItem -&gt;&#10;            when (menuItem.itemId) {&#10;                R.id.nav_start -&gt; {&#10;                    val sharedPref = getSharedPreferences(&quot;user_settings&quot;, MODE_PRIVATE)&#10;                    val hasStarted = sharedPref.contains(&quot;start_time&quot;)&#10;&#10;                    if (hasStarted) {&#10;                        // 금주 중일 때는 상태 화면으로 이동&#10;                        if (this !is StatusActivity) {&#10;                            val intent = Intent(this, StatusActivity::class.java)&#10;                            // 기존 StatusActivity를 재사용하기 위한 플래그 설정&#10;                            intent.flags = Intent.FLAG_ACTIVITY_REORDER_TO_FRONT&#10;                            startActivity(intent)&#10;                            if (this !is MainActivity) {&#10;                                finish()&#10;                            }&#10;                        }&#10;                    } else {&#10;                        // 금주 중이 아닐 때는 시작 화면으로 이동&#10;                        if (this !is StartActivity) {&#10;                            val intent = Intent(this, StartActivity::class.java)&#10;                            startActivity(intent)&#10;                            if (this !is MainActivity) {&#10;                                finish()&#10;                            }&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_records -&gt; {&#10;                    // 활동 보기 화면으로 이동&#10;                    Toast.makeText(this, &quot;활동 보기로 이동합니다&quot;, Toast.LENGTH_SHORT).show()&#10;                    if (this !is RecordsActivity) {&#10;                        val intent = Intent(this, RecordsActivity::class.java)&#10;                        startActivity(intent)&#10;                        if (this !is MainActivity) {&#10;                            finish()&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_challenge -&gt; {&#10;                    // 챌린지 화면으로 이동&#10;                    if (this !is ChallengeActivity) {&#10;                        val intent = Intent(this, ChallengeActivity::class.java)&#10;                        startActivity(intent)&#10;                        if (this !is MainActivity) {&#10;                            finish()&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_messages -&gt; {&#10;                    // 응원 메시지 화면으로 이동&#10;                    if (this !is MessageActivity) {&#10;                        val intent = Intent(this, MessageActivity::class.java)&#10;                        startActivity(intent)&#10;                        if (this !is MainActivity) {&#10;                            finish()&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_notifications -&gt; {&#10;                    // 알림함 화면으로 이동&#10;                    if (this !is NotificationsActivity) {&#10;                        val intent = Intent(this, NotificationsActivity::class.java)&#10;                        startActivity(intent)&#10;                        if (this !is MainActivity) {&#10;                            finish()&#10;                        }&#10;                    }&#10;                }&#10;                R.id.nav_settings -&gt; {&#10;                    // 설정 화면으로 이동&#10;                    val intent = Intent(this, SettingsActivity::class.java)&#10;                    startActivity(intent)&#10;                    // 설정 화면에서는 현재 화면을 유지&#10;                }&#10;            }&#10;            // 메뉴 선택 후 드로어 닫기&#10;            drawerLayout.close()&#10;            true&#10;        }&#10;&#10;        // 특정 화면에 필요한 컨텐츠 뷰 설정&#10;        setupContentView()&#10;    }&#10;&#10;    /**&#10;     * 금주 상태에 따라 내비게이션 메뉴 상태와 헤더 정보를 업데이트합니다.&#10;     */&#10;    private fun updateNavigationDrawer() {&#10;        // 네비게이션 메뉴 상태 업데이트&#10;        updateNavigationMenuState()&#10;&#10;        // 네비게이션 헤더 정보 업데이트&#10;        updateNavigationHeader()&#10;    }&#10;&#10;    /**&#10;     * 금주 상태에 따라 내비게이션 메뉴 상태를 업데이트합니다.&#10;     * 금주 메뉴는 항상 활성화하고, 금주 중인 경우 텍스트를 '금주 상태'로 변경합니다.&#10;     */&#10;    private fun updateNavigationMenuState() {&#10;        val sharedPref = getSharedPreferences(&quot;user_settings&quot;, MODE_PRIVATE)&#10;        val hasStarted = sharedPref.contains(&quot;start_time&quot;)&#10;&#10;        // 금주 메뉴는 항상 활성화하고, 금주 중인 경우 텍스트 변경&#10;        val startMenuItem = navigationView.menu.findItem(R.id.nav_start)&#10;        startMenuItem.isEnabled = true&#10;        if (hasStarted) {&#10;            startMenuItem.title = &quot;금주 상태&quot;&#10;        } else {&#10;            startMenuItem.title = &quot;금주&quot;&#10;        }&#10;&#10;        // 활동 보기 메뉴는 항상 활성화&#10;        val recordsMenuItem = navigationView.menu.findItem(R.id.nav_records)&#10;        recordsMenuItem.isEnabled = true&#10;    }&#10;&#10;    /**&#10;     * 네비게이션 헤더의 사용자 정보를 업데이트합니다.&#10;     */&#10;    private fun updateNavigationHeader() {&#10;        val headerView = navigationView.getHeaderView(0)&#10;        if (headerView != null) {&#10;            val tvUserNickname = headerView.findViewById&lt;TextView&gt;(R.id.tvUserNickname)&#10;            val tvUserLevelDays = headerView.findViewById&lt;TextView&gt;(R.id.tvUserLevelDays)&#10;&#10;            // 사용자 이름은 기본값으로 &quot;알중이&quot; 사용&#10;            tvUserNickname.text = &quot;알중이&quot;&#10;&#10;            // 금주 상태에 따른 레벨 및 일수 정보 업데이트&#10;            val sharedPref = getSharedPreferences(&quot;user_settings&quot;, MODE_PRIVATE)&#10;            if (sharedPref.contains(&quot;start_time&quot;)) {&#10;                val startTime = sharedPref.getLong(&quot;start_time&quot;, Date().time)&#10;                val timePassed = ((System.currentTimeMillis() - startTime) / Constants.TIME_UNIT_MILLIS).toInt()&#10;&#10;                // 레벨 계산 (시간 단위에 따라 적절한 마일스톤 사용)&#10;                val adjustedMilestones = when {&#10;                    Constants.isSecondTestMode -&gt; listOf(0, 7, 14, 30, 60, 120, 240, 365)&#10;                    Constants.isMinuteTestMode -&gt; listOf(0, 1, 2, 5, 10, 15, 20, 30)&#10;                    else -&gt; listOf(0, 7, 14, 30, 60, 120, 240, 365)&#10;                }&#10;&#10;                var currentLevel = 1&#10;                for (i in adjustedMilestones.indices) {&#10;                    if (timePassed &gt;= adjustedMilestones[i]) {&#10;                        currentLevel = i + 1&#10;                    } else {&#10;                        break&#10;                    }&#10;                }&#10;&#10;                tvUserLevelDays.text = &quot;Level $currentLevel · ${timePassed}${Constants.TIME_UNIT_TEXT} 금주 중&quot;&#10;            } else {&#10;                tvUserLevelDays.text = &quot;금주를 시작해보세요!&quot;&#10;            }&#10;        }&#10;    }&#10;&#10;    /**&#10;     * 각 액티비티에서 구현할 추상 메소드&#10;     * 각자의 레이아웃을 contentFrame에 추가하는 작업을 수행&#10;     */&#10;    protected abstract fun setupContentView()&#10;&#10;    /**&#10;     * 액티비티가 새 인텐트로 재사용될 때 수행할 작업을 정의합니다.&#10;     * 자식 클래스에서 오버라이드할 수 있습니다.&#10;     */&#10;    open fun handleNewIntent(intent: Intent?) {&#10;        // 기본 구현은 아무 작업도 수행하지 않습니다&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/ChallengeActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/ChallengeActivity.kt" />
              <option name="originalContent" value="package com.example.alcoholictimer&#10;&#10;import android.os.Bundle&#10;import android.view.MenuItem&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.appcompat.widget.Toolbar&#10;&#10;class ChallengeActivity : AppCompatActivity() {&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_challenge)&#10;&#10;        // 툴바 설정&#10;        val toolbar: Toolbar = findViewById(R.id.toolbar)&#10;        setSupportActionBar(toolbar)&#10;        supportActionBar?.setDisplayHomeAsUpEnabled(true)&#10;        supportActionBar?.title = &quot;챌린지&quot;&#10;    }&#10;&#10;    // 뒤로가기 버튼 처리&#10;    override fun onOptionsItemSelected(item: MenuItem): Boolean {&#10;        if (item.itemId == android.R.id.home) {&#10;            onBackPressed()&#10;            return true&#10;        }&#10;        return super.onOptionsItemSelected(item)&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.alcoholictimer&#13;&#10;&#13;&#10;import android.os.Bundle&#13;&#10;import android.view.LayoutInflater&#13;&#10;import android.widget.FrameLayout&#13;&#10;&#13;&#10;class ChallengeActivity : BaseActivity() {&#13;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#13;&#10;        super.onCreate(savedInstanceState)&#13;&#10;    }&#13;&#10;&#13;&#10;    override fun setupContentView() {&#13;&#10;        val contentFrame = findViewById&lt;FrameLayout&gt;(R.id.contentFrame)&#13;&#10;        LayoutInflater.from(this).inflate(R.layout.activity_challenge, contentFrame, true)&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/MessageActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/MessageActivity.kt" />
              <option name="originalContent" value="package com.example.alcoholictimer&#10;&#10;import android.os.Bundle&#10;import android.view.MenuItem&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.appcompat.widget.Toolbar&#10;&#10;class MessageActivity : AppCompatActivity() {&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_message)&#10;&#10;        // 툴바 설정&#10;        val toolbar: Toolbar = findViewById(R.id.toolbar)&#10;        setSupportActionBar(toolbar)&#10;        supportActionBar?.setDisplayHomeAsUpEnabled(true)&#10;        supportActionBar?.title = &quot;응원 메시지&quot;&#10;    }&#10;&#10;    // 뒤로가기 버튼 처리&#10;    override fun onOptionsItemSelected(item: MenuItem): Boolean {&#10;        if (item.itemId == android.R.id.home) {&#10;            onBackPressed()&#10;            return true&#10;        }&#10;        return super.onOptionsItemSelected(item)&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.alcoholictimer&#13;&#10;&#13;&#10;import android.os.Bundle&#13;&#10;import android.view.LayoutInflater&#13;&#10;import android.widget.FrameLayout&#13;&#10;&#13;&#10;class MessageActivity : BaseActivity() {&#13;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#13;&#10;        super.onCreate(savedInstanceState)&#13;&#10;    }&#13;&#10;&#13;&#10;    override fun setupContentView() {&#13;&#10;        val contentFrame = findViewById&lt;FrameLayout&gt;(R.id.contentFrame)&#13;&#10;        LayoutInflater.from(this).inflate(R.layout.activity_message, contentFrame, true)&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/NotificationsActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/NotificationsActivity.kt" />
              <option name="originalContent" value="package com.example.alcoholictimer&#10;&#10;import android.os.Bundle&#10;import androidx.appcompat.app.AppCompatActivity&#10;import com.example.alcoholictimer.R&#10;&#10;class NotificationsActivity : AppCompatActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_notifications)&#10;&#10;        // 뒤로가기 버튼 설정&#10;        supportActionBar?.apply {&#10;            setDisplayHomeAsUpEnabled(true)&#10;            title = &quot;알림함&quot;&#10;        }&#10;    }&#10;&#10;    override fun onSupportNavigateUp(): Boolean {&#10;        onBackPressedDispatcher.onBackPressed()&#10;        return true&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.alcoholictimer&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.widget.FrameLayout&#10;&#10;class NotificationsActivity : BaseActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;    }&#10;&#10;    override fun setupContentView() {&#10;        val contentFrame = findViewById&lt;FrameLayout&gt;(R.id.contentFrame)&#10;        LayoutInflater.from(this).inflate(R.layout.activity_notifications, contentFrame, true)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/SettingsActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/alcoholictimer/SettingsActivity.kt" />
              <option name="originalContent" value="package com.example.alcoholictimer&#10;&#10;import android.content.Context&#10;import android.os.Bundle&#10;import android.widget.Button&#10;import android.widget.RadioButton&#10;import android.widget.RadioGroup&#10;import android.widget.Toast&#10;import androidx.appcompat.app.AppCompatActivity&#10;import com.example.alcoholictimer.utils.Constants&#10;&#10;class SettingsActivity : AppCompatActivity() {&#10;&#10;    private lateinit var radioGroupTestMode: RadioGroup&#10;    private lateinit var rbRealMode: RadioButton&#10;    private lateinit var rbMinuteMode: RadioButton&#10;    private lateinit var rbSecondMode: RadioButton&#10;    private lateinit var btnSaveSettings: Button&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_settings)&#10;&#10;        // UI 요소 초기화&#10;        radioGroupTestMode = findViewById(R.id.radioGroupTestMode)&#10;        rbRealMode = findViewById(R.id.rbRealMode)&#10;        rbMinuteMode = findViewById(R.id.rbMinuteMode)&#10;        rbSecondMode = findViewById(R.id.rbSecondMode)&#10;        btnSaveSettings = findViewById(R.id.btnSaveSettings)&#10;&#10;        // 현재 설정 불러오기 및 UI에 반영&#10;        loadCurrentSettings()&#10;&#10;        // 저장 버튼 클릭 이벤트&#10;        btnSaveSettings.setOnClickListener {&#10;            saveSettings()&#10;            Toast.makeText(this, &quot;설정이 저장되었습니다.&quot;, Toast.LENGTH_SHORT).show()&#10;            finish()&#10;        }&#10;    }&#10;&#10;    /**&#10;     * 현재 설정을 불러와 UI에 반영합니다.&#10;     */&#10;    private fun loadCurrentSettings() {&#10;        val preferences = getSharedPreferences(Constants.PREFS_NAME, Context.MODE_PRIVATE)&#10;        val testMode = preferences.getInt(Constants.PREF_KEY_TEST_MODE, Constants.TEST_MODE_SECOND)&#10;&#10;        // 라디오 버튼 선택 상태 설정&#10;        when (testMode) {&#10;            Constants.TEST_MODE_REAL -&gt; rbRealMode.isChecked = true&#10;            Constants.TEST_MODE_MINUTE -&gt; rbMinuteMode.isChecked = true&#10;            Constants.TEST_MODE_SECOND -&gt; rbSecondMode.isChecked = true&#10;        }&#10;    }&#10;&#10;    /**&#10;     * 사용자 설정을 저장합니다.&#10;     */&#10;    private fun saveSettings() {&#10;        val preferences = getSharedPreferences(Constants.PREFS_NAME, Context.MODE_PRIVATE)&#10;        val editor = preferences.edit()&#10;&#10;        // 선택된 테스트 모드 저장&#10;        val testMode = when (radioGroupTestMode.checkedRadioButtonId) {&#10;            R.id.rbRealMode -&gt; Constants.TEST_MODE_REAL&#10;            R.id.rbMinuteMode -&gt; Constants.TEST_MODE_MINUTE&#10;            R.id.rbSecondMode -&gt; Constants.TEST_MODE_SECOND&#10;            else -&gt; Constants.TEST_MODE_SECOND // 기본값&#10;        }&#10;&#10;        editor.putInt(Constants.PREF_KEY_TEST_MODE, testMode)&#10;        editor.apply()&#10;&#10;        // Constants 클래스의 동적 설정 업데이트&#10;        Constants.updateTestMode(testMode)&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.alcoholictimer&#13;&#10;&#13;&#10;import android.content.Context&#13;&#10;import android.os.Bundle&#13;&#10;import android.view.LayoutInflater&#13;&#10;import android.widget.Button&#13;&#10;import android.widget.FrameLayout&#13;&#10;import android.widget.RadioButton&#13;&#10;import android.widget.RadioGroup&#13;&#10;import android.widget.Toast&#13;&#10;import androidx.appcompat.app.AppCompatActivity&#13;&#10;import com.example.alcoholictimer.utils.Constants&#13;&#10;&#13;&#10;class SettingsActivity : BaseActivity() {&#13;&#10;&#13;&#10;    private lateinit var radioGroupTestMode: RadioGroup&#13;&#10;    private lateinit var rbRealMode: RadioButton&#13;&#10;    private lateinit var rbMinuteMode: RadioButton&#13;&#10;    private lateinit var rbSecondMode: RadioButton&#13;&#10;    private lateinit var btnSaveSettings: Button&#13;&#10;&#13;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#13;&#10;        super.onCreate(savedInstanceState)&#13;&#10;&#13;&#10;        // UI 요소 초기화&#13;&#10;        radioGroupTestMode = findViewById(R.id.radioGroupTestMode)&#13;&#10;        rbRealMode = findViewById(R.id.rbRealMode)&#13;&#10;        rbMinuteMode = findViewById(R.id.rbMinuteMode)&#13;&#10;        rbSecondMode = findViewById(R.id.rbSecondMode)&#13;&#10;        btnSaveSettings = findViewById(R.id.btnSaveSettings)&#13;&#10;&#13;&#10;        // 현재 설정 불러오기 및 UI에 반영&#13;&#10;        loadCurrentSettings()&#13;&#10;&#13;&#10;        // 저장 버튼 클릭 이벤트&#13;&#10;        btnSaveSettings.setOnClickListener {&#13;&#10;            saveSettings()&#13;&#10;            Toast.makeText(this, &quot;설정이 저장되었습니다.&quot;, Toast.LENGTH_SHORT).show()&#13;&#10;            finish()&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * 현재 설정을 불러와 UI에 반영합니다.&#13;&#10;     */&#13;&#10;    private fun loadCurrentSettings() {&#13;&#10;        val preferences = getSharedPreferences(Constants.PREFS_NAME, Context.MODE_PRIVATE)&#13;&#10;        val testMode = preferences.getInt(Constants.PREF_KEY_TEST_MODE, Constants.TEST_MODE_SECOND)&#13;&#10;&#13;&#10;        // 라디오 버튼 선택 상태 설정&#13;&#10;        when (testMode) {&#13;&#10;            Constants.TEST_MODE_REAL -&gt; rbRealMode.isChecked = true&#13;&#10;            Constants.TEST_MODE_MINUTE -&gt; rbMinuteMode.isChecked = true&#13;&#10;            Constants.TEST_MODE_SECOND -&gt; rbSecondMode.isChecked = true&#13;&#10;        }&#13;&#10;    }&#13;&#10;&#13;&#10;    /**&#13;&#10;     * 사용자 설정을 저장합니다.&#13;&#10;     */&#13;&#10;    private fun saveSettings() {&#13;&#10;        val preferences = getSharedPreferences(Constants.PREFS_NAME, Context.MODE_PRIVATE)&#13;&#10;        val editor = preferences.edit()&#13;&#10;&#13;&#10;        // 선택된 테스트 모드 저장&#13;&#10;        val testMode = when (radioGroupTestMode.checkedRadioButtonId) {&#13;&#10;            R.id.rbRealMode -&gt; Constants.TEST_MODE_REAL&#13;&#10;            R.id.rbMinuteMode -&gt; Constants.TEST_MODE_MINUTE&#13;&#10;            R.id.rbSecondMode -&gt; Constants.TEST_MODE_SECOND&#13;&#10;            else -&gt; Constants.TEST_MODE_SECOND // 기본값&#13;&#10;        }&#13;&#10;&#13;&#10;        editor.putInt(Constants.PREF_KEY_TEST_MODE, testMode)&#13;&#10;        editor.apply()&#13;&#10;&#13;&#10;        // Constants 클래스의 동적 설정 업데이트&#13;&#10;        Constants.updateTestMode(testMode)&#13;&#10;    }&#13;&#10;&#13;&#10;    override fun setupContentView() {&#13;&#10;        val contentFrame = findViewById&lt;FrameLayout&gt;(R.id.contentFrame)&#13;&#10;        LayoutInflater.from(this).inflate(R.layout.activity_settings, contentFrame, true)&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_challenge.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_challenge.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#000000&quot;&#10;        android:pathData=&quot;M19,5h-2V3H7v2H5C3.9,5 3,5.9 3,7v1c0,2.55 1.92,4.63 4.39,4.94c0.63,1.5 1.98,2.63 3.61,2.96V19H7v2h10v-2h-4v-3.1c1.63,-0.33 2.98,-1.46 3.61,-2.96C19.08,12.63 21,10.55 21,8V7C21,5.9 20.1,5 19,5zM7,10.82C5.84,10.4 5,9.3 5,8V7h2V10.82zM19,8c0,1.3 -0.84,2.4 -2,2.82V7h2V8z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_menu.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_menu.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#000000&quot;&#10;        android:pathData=&quot;M3,18h18v-2H3V18zM3,13h18v-2H3V13zM3,6v2h18V6H3z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_messages.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_messages.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#000000&quot;&#10;        android:pathData=&quot;M20,2H4C2.9,2 2,2.9 2,4v18l4,-4h14c1.1,0 2,-0.9 2,-2V4C22,2.9 21.1,2 20,2zM19,13H5v-2h14V13zM19,9H5V7h14V9z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_notifications.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_notifications.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#000000&quot;&#10;        android:pathData=&quot;M12,22c1.1,0 2,-0.9 2,-2h-4c0,1.1 0.9,2 2,2zM18,16v-5c0,-3.07 -1.63,-5.64 -4.5,-6.32V4c0,-0.83 -0.67,-1.5 -1.5,-1.5s-1.5,0.67 -1.5,1.5v0.68C7.64,5.36 6,7.92 6,11v5l-2,2v1h16v-1l-2,-2zM16,17H8v-6c0,-2.48 1.51,-4.5 4,-4.5s4,2.02 4,4.5v6z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_records.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_records.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#000000&quot;&#10;        android:pathData=&quot;M19,3h-4.18C14.4,1.84 13.3,1 12,1S9.6,1.84 9.18,3H5C3.9,3 3,3.9 3,5v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2V5C21,3.9 20.1,3 19,3zM12,3c0.55,0 1,0.45 1,1s-0.45,1 -1,1s-1,-0.45 -1,-1S11.45,3 12,3zM14,17H7v-2h7V17zM17,13H7v-2h10V13zM17,9H7V7h10V9z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_settings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_settings.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#000000&quot;&#10;        android:pathData=&quot;M19.14,12.94c0.04,-0.3 0.06,-0.61 0.06,-0.94c0,-0.32 -0.02,-0.64 -0.07,-0.94l2.03,-1.58c0.18,-0.14 0.23,-0.41 0.12,-0.61l-1.92,-3.32c-0.12,-0.22 -0.37,-0.29 -0.59,-0.22l-2.39,0.96c-0.5,-0.38 -1.03,-0.7 -1.62,-0.94L14.4,2.81c-0.04,-0.24 -0.24,-0.41 -0.48,-0.41h-3.84c-0.24,0 -0.43,0.17 -0.47,0.41L9.25,5.35C8.66,5.59 8.12,5.92 7.63,6.29L5.24,5.33c-0.22,-0.08 -0.47,0 -0.59,0.22L2.74,8.87C2.62,9.08 2.66,9.34 2.86,9.48l2.03,1.58C4.84,11.36 4.8,11.69 4.8,12s0.02,0.64 0.07,0.94l-2.03,1.58c-0.18,0.14 -0.23,0.41 -0.12,0.61l1.92,3.32c0.12,0.22 0.37,0.29 0.59,0.22l2.39,-0.96c0.5,0.38 1.03,0.7 1.62,0.94l0.36,2.54c0.05,0.24 0.24,0.41 0.48,0.41h3.84c0.24,0 0.44,-0.17 0.47,-0.41l0.36,-2.54c0.59,-0.24 1.13,-0.56 1.62,-0.94l2.39,0.96c0.22,0.08 0.47,0 0.59,-0.22l1.92,-3.32c0.12,-0.22 0.07,-0.47 -0.12,-0.61L19.14,12.94zM12,15.6c-1.98,0 -3.6,-1.62 -3.6,-3.6s1.62,-3.6 3.6,-3.6s3.6,1.62 3.6,3.6S13.98,15.6 12,15.6z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_start.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_start.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#000000&quot;&#10;        android:pathData=&quot;M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM10,17l-5,-5 1.41,-1.41L10,14.17l7.59,-7.59L19,8l-9,9z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_challenge.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_challenge.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#FFFFFF&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    tools:context=&quot;.ChallengeActivity&quot;&gt;&#10;&#10;    &lt;androidx.core.widget.NestedScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:text=&quot;챌린지&quot;&#10;                android:textSize=&quot;20sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                android:text=&quot;이 화면은 챌린지 기능의 테스트 화면입니다. 추후 기획에 따라 구현될 예정입니다.&quot;&#10;                android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/androidx.core.widget.NestedScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#FFFFFF&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    tools:context=&quot;.ChallengeActivity&quot;&gt;&#10;&#10;    &lt;androidx.core.widget.NestedScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:text=&quot;챌린지&quot;&#10;                android:textSize=&quot;20sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:background=&quot;#DDDDDD&quot; /&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;개발 진행 중&quot;&#10;                        android:textColor=&quot;#000000&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;이 화면은 챌린지 기능의 테스트 화면입니다. 추후 기획에 따라 구현될 예정입니다.&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textColor=&quot;#555555&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/androidx.core.widget.NestedScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_message.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_message.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#FFFFFF&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    tools:context=&quot;.MessageActivity&quot;&gt;&#10;&#10;    &lt;androidx.core.widget.NestedScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:text=&quot;응원 메시지&quot;&#10;                android:textSize=&quot;20sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:background=&quot;#DDDDDD&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:text=&quot;이 화면은 응원 메시지 기능의 테스트 화면입니다. 추후 기획에 따라 구현될 예정입니다.&quot; /&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;오늘의 응원 메시지&quot;&#10;                        android:textColor=&quot;#000000&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;16dp&quot;&#10;                        android:text=&quot;'무엇이든 시작하기에 가장 좋은 시간은 지금입니다. 당신의 금주를 응원합니다!'&quot;&#10;                        android:textColor=&quot;#555555&quot;&#10;                        android:textStyle=&quot;italic&quot;&#10;                        android:textSize=&quot;16sp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;친구에게 응원 메시지 보내기&quot;&#10;                        android:textColor=&quot;#000000&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;EditText&#10;                        android:id=&quot;@+id/editTextMessage&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:hint=&quot;메시지를 입력하세요&quot;&#10;                        android:minHeight=&quot;100dp&quot;&#10;                        android:gravity=&quot;top&quot;&#10;                        android:background=&quot;@android:drawable/edit_text&quot; /&gt;&#10;&#10;                    &lt;Button&#10;                        android:id=&quot;@+id/btnSendMessage&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;메시지 보내기&quot;&#10;                        android:layout_gravity=&quot;end&quot;&#10;                        android:textColor=&quot;#FFFFFF&quot;&#10;                        android:backgroundTint=&quot;#000000&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;받은 메시지함&quot;&#10;                        android:textColor=&quot;#000000&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;아직 받은 메시지가 없습니다.&quot;&#10;                        android:textColor=&quot;#777777&quot; /&gt;&#10;&#10;                    &lt;Button&#10;                        android:id=&quot;@+id/btnRefreshMessages&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;새로고침&quot;&#10;                        android:textColor=&quot;#FFFFFF&quot;&#10;                        android:backgroundTint=&quot;#000000&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/androidx.core.widget.NestedScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;#FFFFFF&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    tools:context=&quot;.MessageActivity&quot;&gt;&#10;&#10;    &lt;androidx.core.widget.NestedScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:text=&quot;응원 메시지&quot;&#10;                android:textSize=&quot;20sp&quot;&#10;                android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:background=&quot;#DDDDDD&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textColor=&quot;#333333&quot;&#10;                android:text=&quot;이 화면은 응원 메시지 기능의 테스트 화면입니다. 추후 기획에 따라 구현될 예정입니다.&quot; /&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;오늘의 응원 메시지&quot;&#10;                        android:textColor=&quot;#000000&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;16dp&quot;&#10;                        android:text=&quot;'무엇이든 시작하기에 가장 좋은 시간은 지금입니다. 당신의 금주를 응원합니다!'&quot;&#10;                        android:textColor=&quot;#555555&quot;&#10;                        android:textStyle=&quot;italic&quot;&#10;                        android:textSize=&quot;16sp&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;친구에게 응원 메시지 보내기&quot;&#10;                        android:textColor=&quot;#000000&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;EditText&#10;                        android:id=&quot;@+id/editTextMessage&quot;&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:hint=&quot;메시지를 입력하세요&quot;&#10;                        android:minHeight=&quot;100dp&quot;&#10;                        android:gravity=&quot;top&quot;&#10;                        android:background=&quot;@android:drawable/edit_text&quot; /&gt;&#10;&#10;                    &lt;Button&#10;                        android:id=&quot;@+id/btnSendMessage&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;메시지 보내기&quot;&#10;                        android:layout_gravity=&quot;end&quot;&#10;                        android:textColor=&quot;#FFFFFF&quot;&#10;                        android:backgroundTint=&quot;#000000&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;&#10;            &lt;androidx.cardview.widget.CardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                app:cardCornerRadius=&quot;8dp&quot;&#10;                app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;받은 메시지함&quot;&#10;                        android:textColor=&quot;#000000&quot;&#10;                        android:textSize=&quot;18sp&quot;&#10;                        android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;아직 받은 메시지가 없습니다.&quot;&#10;                        android:textColor=&quot;#777777&quot; /&gt;&#10;&#10;                    &lt;Button&#10;                        android:id=&quot;@+id/btnRefreshMessages&quot;&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_marginTop=&quot;8dp&quot;&#10;                        android:text=&quot;새로고침&quot;&#10;                        android:textColor=&quot;#FFFFFF&quot;&#10;                        android:backgroundTint=&quot;#000000&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/androidx.cardview.widget.CardView&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/androidx.core.widget.NestedScrollView&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_notifications.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_notifications.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:text=&quot;알림 없음&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:layout_gravity=&quot;center&quot;/&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_settings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_settings.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:paddingTop=&quot;32dp&quot;&#10;    android:background=&quot;@color/background&quot;&gt;&#10;&#10;    &lt;!-- 상단 타이틀 --&gt;&#10;    &lt;TextView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;설정&quot;&#10;        android:textSize=&quot;24sp&quot;&#10;        android:textColor=&quot;@color/text_primary&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:layout_marginBottom=&quot;24dp&quot;/&gt;&#10;&#10;    &lt;!-- 설정 컨테이너 --&gt;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:layout_weight=&quot;1&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;16dp&quot;&gt;&#10;&#10;            &lt;!-- 테스트 모드 섹션 --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;테스트 모드 설정&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;            &lt;!-- 테스트 모드 라디오 그룹 --&gt;&#10;            &lt;RadioGroup&#10;                android:id=&quot;@+id/radioGroupTestMode&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;!-- 실제 모드 옵션 --&gt;&#10;                &lt;RadioButton&#10;                    android:id=&quot;@+id/rbRealMode&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;실제 모드 (1일 = 24시간)&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:paddingStart=&quot;8dp&quot;&#10;                    android:paddingEnd=&quot;16dp&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;/&gt;&#10;&#10;                &lt;!-- 분 단위 테스트 모드 옵션 --&gt;&#10;                &lt;RadioButton&#10;                    android:id=&quot;@+id/rbMinuteMode&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;분 단위 테스트 모드 (1일 = 1분)&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:paddingStart=&quot;8dp&quot;&#10;                    android:paddingEnd=&quot;16dp&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;/&gt;&#10;&#10;                &lt;!-- 초 단위 테스트 모드 옵션 --&gt;&#10;                &lt;RadioButton&#10;                    android:id=&quot;@+id/rbSecondMode&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;초 단위 테스트 모드 (1일 = 1초)&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:paddingStart=&quot;8dp&quot;&#10;                    android:paddingEnd=&quot;16dp&quot;&#10;                    android:layout_marginBottom=&quot;12dp&quot;/&gt;&#10;            &lt;/RadioGroup&gt;&#10;&#10;            &lt;!-- 테스트 모드 설명 --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;※ 테스트 모드는 앱의 동작을 빠르게 확인하기 위한 기능입니다. 실제 사용 시에는 '실제 모드'로 설정하세요.&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:layout_marginTop=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;/&gt;&#10;&#10;            &lt;!-- 구분선 --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#DDDDDD&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;/&gt;&#10;&#10;            &lt;!-- 앱 정보 섹션 --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;앱 정보&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;버전: 1.0.0&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&#10;    &lt;!-- 하단 저장 버튼 --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnSaveSettings&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;설정 저장&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:layout_margin=&quot;16dp&quot;/&gt;&#10;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#13;&#10;    android:layout_width=&quot;match_parent&quot;&#13;&#10;    android:layout_height=&quot;match_parent&quot;&#13;&#10;    android:orientation=&quot;vertical&quot;&#13;&#10;    android:background=&quot;#FFFFFF&quot;&#13;&#10;    tools:context=&quot;.SettingsActivity&quot;&gt;&#13;&#10;&#13;&#10;    &lt;LinearLayout&#13;&#10;        android:layout_width=&quot;match_parent&quot;&#13;&#10;        android:layout_height=&quot;wrap_content&quot;&#13;&#10;        android:orientation=&quot;vertical&quot;&#13;&#10;        android:padding=&quot;16dp&quot;&gt;&#13;&#10;&#13;&#10;        &lt;TextView&#13;&#10;            android:layout_width=&quot;match_parent&quot;&#13;&#10;            android:layout_height=&quot;wrap_content&quot;&#13;&#10;            android:layout_marginTop=&quot;8dp&quot;&#13;&#10;            android:text=&quot;설정&quot;&#13;&#10;            android:textSize=&quot;20sp&quot;&#13;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;View&#13;&#10;            android:layout_width=&quot;match_parent&quot;&#13;&#10;            android:layout_height=&quot;1dp&quot;&#13;&#10;            android:layout_marginTop=&quot;8dp&quot;&#13;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#13;&#10;            android:background=&quot;#DDDDDD&quot; /&gt;&#13;&#10;&#13;&#10;        &lt;TextView&#13;&#10;            android:layout_width=&quot;wrap_content&quot;&#13;&#10;            android:layout_height=&quot;wrap_content&quot;&#13;&#10;            android:text=&quot;테스트 모드 설정&quot;&#13;&#10;            android:textSize=&quot;16sp&quot;&#13;&#10;            android:textStyle=&quot;bold&quot;&#13;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#13;&#10;&#13;&#10;        &lt;RadioGroup&#13;&#10;            android:id=&quot;@+id/radioGroupTestMode&quot;&#13;&#10;            android:layout_width=&quot;match_parent&quot;&#13;&#10;            android:layout_height=&quot;wrap_content&quot;&#13;&#10;            android:orientation=&quot;vertical&quot;&gt;&#13;&#10;&#13;&#10;            &lt;RadioButton&#13;&#10;                android:id=&quot;@+id/rbRealMode&quot;&#13;&#10;                android:layout_width=&quot;match_parent&quot;&#13;&#10;                android:layout_height=&quot;wrap_content&quot;&#13;&#10;                android:text=&quot;실제 모드 (1일 = 24시간)&quot;&#13;&#10;                android:padding=&quot;8dp&quot;/&gt;&#13;&#10;&#13;&#10;            &lt;RadioButton&#13;&#10;                android:id=&quot;@+id/rbMinuteMode&quot;&#13;&#10;                android:layout_width=&quot;match_parent&quot;&#13;&#10;                android:layout_height=&quot;wrap_content&quot;&#13;&#10;                android:text=&quot;테스트 모드 (1일 = 1분)&quot;&#13;&#10;                android:padding=&quot;8dp&quot;/&gt;&#13;&#10;&#13;&#10;            &lt;RadioButton&#13;&#10;                android:id=&quot;@+id/rbSecondMode&quot;&#13;&#10;                android:layout_width=&quot;match_parent&quot;&#13;&#10;                android:layout_height=&quot;wrap_content&quot;&#13;&#10;                android:text=&quot;테스트 모드 (1일 = 1초)&quot;&#13;&#10;                android:padding=&quot;8dp&quot;/&gt;&#13;&#10;        &lt;/RadioGroup&gt;&#13;&#10;&#13;&#10;        &lt;Button&#13;&#10;            android:id=&quot;@+id/btnSaveSettings&quot;&#13;&#10;            android:layout_width=&quot;wrap_content&quot;&#13;&#10;            android:layout_height=&quot;wrap_content&quot;&#13;&#10;            android:text=&quot;저장&quot;&#13;&#10;            android:layout_gravity=&quot;end&quot;&#13;&#10;            android:layout_marginTop=&quot;16dp&quot;&#13;&#10;            android:textColor=&quot;#FFFFFF&quot;&#13;&#10;            android:backgroundTint=&quot;#000000&quot;/&gt;&#13;&#10;    &lt;/LinearLayout&gt;&#13;&#10;&#13;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/layout_base.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/layout_base.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.drawerlayout.widget.DrawerLayout&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:id=&quot;@+id/drawerLayout&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/background&quot;&gt;&#10;&#10;    &lt;!-- 메인 컨텐츠 컨테이너 --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;!-- 상단 툴바 --&gt;&#10;        &lt;androidx.appcompat.widget.Toolbar&#10;            android:id=&quot;@+id/toolbar&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:minHeight=&quot;?attr/actionBarSize&quot;&#10;            android:paddingTop=&quot;24dp&quot;&#10;            android:background=&quot;@color/background&quot;&#10;            android:elevation=&quot;0dp&quot;&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/btnMenu&quot;&#10;                android:layout_width=&quot;48dp&quot;&#10;                android:layout_height=&quot;48dp&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:src=&quot;@drawable/ic_menu&quot;&#10;                android:contentDescription=&quot;메뉴 열기&quot;/&gt;&#10;&#10;        &lt;/androidx.appcompat.widget.Toolbar&gt;&#10;&#10;        &lt;!-- 각 화면의 컨텐츠가 들어갈 곳 --&gt;&#10;        &lt;FrameLayout&#10;            android:id=&quot;@+id/contentFrame&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- 네비게이션 드로어 --&gt;&#10;    &lt;com.google.android.material.navigation.NavigationView&#10;        android:id=&quot;@+id/navigationView&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:layout_gravity=&quot;start&quot;&#10;        android:background=&quot;@color/background&quot;&#10;        app:headerLayout=&quot;@layout/nav_header&quot;&#10;        app:menu=&quot;@menu/drawer_menu&quot;&#10;        app:itemIconTint=&quot;@color/primary&quot;&#10;        app:itemTextColor=&quot;@android:color/black&quot;/&gt;&#10;&#10;&lt;/androidx.drawerlayout.widget.DrawerLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#13;&#10;&lt;androidx.drawerlayout.widget.DrawerLayout&#13;&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#13;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#13;&#10;    android:id=&quot;@+id/drawerLayout&quot;&#13;&#10;    android:layout_width=&quot;match_parent&quot;&#13;&#10;    android:layout_height=&quot;match_parent&quot;&#13;&#10;    android:background=&quot;@color/background&quot;&gt;&#13;&#10;&#13;&#10;    &lt;!-- 메인 컨텐츠 컨테이너 --&gt;&#13;&#10;    &lt;LinearLayout&#13;&#10;        android:layout_width=&quot;match_parent&quot;&#13;&#10;        android:layout_height=&quot;match_parent&quot;&#13;&#10;        android:orientation=&quot;vertical&quot;&gt;&#13;&#10;&#13;&#10;        &lt;!-- 상단 툴바 --&gt;&#13;&#10;        &lt;androidx.appcompat.widget.Toolbar&#13;&#10;            android:id=&quot;@+id/toolbar&quot;&#13;&#10;            android:layout_width=&quot;match_parent&quot;&#13;&#10;            android:layout_height=&quot;wrap_content&quot;&#13;&#10;            android:minHeight=&quot;?attr/actionBarSize&quot;&#13;&#10;            android:paddingTop=&quot;24dp&quot;&#13;&#10;            android:background=&quot;@color/background&quot;&#13;&#10;            android:elevation=&quot;0dp&quot;&gt;&#13;&#10;&#13;&#10;            &lt;ImageButton&#13;&#10;                android:id=&quot;@+id/btnMenu&quot;&#13;&#10;                android:layout_width=&quot;48dp&quot;&#13;&#10;                android:layout_height=&quot;48dp&quot;&#13;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#13;&#10;                android:src=&quot;@drawable/ic_menu&quot;&#13;&#10;                android:contentDescription=&quot;메뉴 열기&quot;/&gt;&#13;&#10;&#13;&#10;        &lt;/androidx.appcompat.widget.Toolbar&gt;&#13;&#10;&#13;&#10;        &lt;!-- 각 화면의 컨텐츠가 들어갈 곳 --&gt;&#13;&#10;        &lt;FrameLayout&#13;&#10;            android:id=&quot;@+id/contentFrame&quot;&#13;&#10;            android:layout_width=&quot;match_parent&quot;&#13;&#10;            android:layout_height=&quot;match_parent&quot; /&gt;&#13;&#10;    &lt;/LinearLayout&gt;&#13;&#10;&#13;&#10;    &lt;!-- 네비게이션 드로어 --&gt;&#13;&#10;    &lt;com.google.android.material.navigation.NavigationView&#13;&#10;        android:id=&quot;@+id/navigationView&quot;&#13;&#10;        android:layout_width=&quot;wrap_content&quot;&#13;&#10;        android:layout_height=&quot;match_parent&quot;&#13;&#10;        android:layout_gravity=&quot;start&quot;&#13;&#10;        android:background=&quot;@color/background&quot;&#13;&#10;        app:headerLayout=&quot;@layout/nav_header&quot;&#13;&#10;        app:menu=&quot;@menu/nav_menu&quot; /&gt;&#13;&#10;&#13;&#10;&lt;/androidx.drawerlayout.widget.DrawerLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/menu/nav_menu.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/menu/nav_menu.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;item&#10;        android:id=&quot;@+id/nav_start&quot;&#10;        android:icon=&quot;@drawable/ic_start&quot;&#10;        android:title=&quot;금주&quot; /&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/nav_records&quot;&#10;        android:icon=&quot;@drawable/ic_records&quot; &#10;        android:title=&quot;활동 보기&quot; /&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/nav_challenge&quot;&#10;        android:icon=&quot;@drawable/ic_challenge&quot;&#10;        android:title=&quot;챌린지&quot; /&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/nav_messages&quot;&#10;        android:icon=&quot;@drawable/ic_messages&quot;&#10;        android:title=&quot;응원 메시지&quot; /&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/nav_notifications&quot;&#10;        android:icon=&quot;@drawable/ic_notifications&quot;&#10;        android:title=&quot;알림함&quot; /&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/nav_settings&quot;&#10;        android:icon=&quot;@drawable/ic_settings&quot;&#10;        android:title=&quot;설정&quot; /&gt;&#10;&lt;/menu&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>